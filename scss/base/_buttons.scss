@import "vars";
//---------------------------------------------------------------------------- BUTTONS

// ._light { @include filter(brightness, 130%);}
// ._dark { 
//     -webkit-filter: brightness(80%) contrast(165%);
//     -ms-filter:  brightness(80%) contrast(165%);
//     filter:  brightness(80%) contrast(165%);
// }
// [class*=" btn"], [class^="btn"] {

.btn:not(._group), .btn_wide, .tag, .btn._group > .btn {
    &:hover, &:focus, &.active {
        @include filter(brightness, 120%);
    }
}
._btns_grid .btn {    
    margin: 0 $colGap/4 $colGap/2 0;
}
.btn {
    font-family: $font;
    padding: $btn_padd_v $btn_padd_h;
    margin: 0 $colGap/4 0 0;
    position: relative;
    display: inline-block;
    vertical-align: middle;
    transition: all ease-in-out 0.2s;
    text-align: center;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    cursor: pointer;
    // width: auto;
    max-width: 100%;
    // line-height: inherit;
    line-height: $fld_line_h;
    font-weight: 100;
    // border: transparent 1px solid;
    border-width: 1px;
    border-color: transparent;
    @include transition(all ease-in-out .3s);
    background-position: 0 2.5em;
    background-repeat: no-repeat;
    border-style: solid;
    //color: $btn_clr;
    &:not(._brdr):not(.-_-):not(.__):not(.\.\.\.):not(._raw):not([class*="_txt_"]) {color: $btn_clr;}
    // &:not(._raw), &:not(._white) {color: $btn_clr;}
    &:hover, &:focus {outline: none;}
    &:last-child { margin-right: 0;}
    // &[class*="icon-"] {
    &:not([class*="la-"]) { padding-left: .7em; padding-right: .7em;}
    &[class*="la-"] {
        // &:not(:empty) {
        //     line-height: inherit;
        // }
      &:before {
        // vertical-align: 0%;
            // color: inherit;
            // font-size: 1.4em;
            // line-height: 0.7em;
            // position: relative;
            // top: -.1em;
        //margin-left: -.2em;
        }        
      &:empty {
          &:not(.-_-):not(.__):not(.\.\.\.):not(._raw)  {padding: 0.3em 0.2em;}    
          &._with_img {padding: 0.32em 0.2em;}    
        min-width: 2.2em;
        overflow: visible;
        &:before {
          width: 100%;
        }
      }
    }
    &._brdr {    
        &:hover {
            text-decoration: none;
            @include filter(brightness, 60%);
        }
    }
    img {
        height: 1.9em;
        max-width: 1.9em;
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translateX(-50%) translateY(-50%);
    }
    // &:not(._brdr), &:not(.__), &:not(.-_-), &:not(.\.\.\.) { color: #fff;}
}
.btn_wide {
min-width: 10em;
padding: 0.4em 1.5em;
}
.tag {
    padding: 0.1em 0.4em;
    margin: 0 .5em .5em 0;
    display: inline-block;
    vertical-align: middle;
    transition: all ease-in-out 0.2s;
    border-radius: $rnd;
    text-align: center;
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
    cursor: pointer;
    width: auto;
    max-width: 100%;
    color: color(white);
    border: transparent 1px solid;
    select {
        background-color: transparent;
        border: none;
        padding: 0;
        color: color(white);
        option { color: color(white); 
            // background: color(white);
        }
    }
}
//=============================== colors
._white {
    &:not(._brdr):not(.-_-):not(.__):not(.\.\.\.):not(._raw) {color: color('black');}
}
@each $colorname, $color in $map_colors {
    // ._txt_#{$colorname} {
    // // unquote('(#{$colorname})'){
    //     color: $color;
    // }
    $darker: darken($color, 15%);
    $lighter: lighten($color, 12%);
    ._#{$colorname}{ 
        background-color: $color;
        border-color: $color;
        color: $color;
        // color: $color;
        // background-image: linear-gradient(to bottom, to_rgba($darker, 0) 0%, to_rgba($darker, 0.5) 100%); 
        &._light { background-color: $lighter; border-color: $lighter; color: $lighter;}
        &._dark { background-color: $darker; border-color: $darker; color: $darker;}
    }
}

@each $colorname, $color in $map_colors {
    ._txt_#{$colorname}, ._dark._txt_#{$colorname}, ._light._txt_#{$colorname} {
       color: $color;
    }
    // ._bg_#{$colorname} {
    //     background-color: $color;
    //  }
}
   
.disabled, [disabled], fieldset[disabled] .btn, ._off, ._light._off, ._dark._off {
    cursor: not-allowed;
    // @include opacity(.4);
    cursor: not-allowed;
    @include filter (brightness, 100%);
    pointer-events: none;
    background: $table_brdr;
    pointer-events: none;
    border-color: transparent;
    &._brdr, &.-_-, &.__, &.\.\.\.  { background: transparent; color: $table_brdr; border-color: $table_brdr; }
}
//========================= btn_group
  .btn._group {
      padding: 0;
      margin-bottom: $colGap;
      letter-spacing: -.5em;
      &._rnd {
        & > *:not(:last-child):not(:first-child) { border-radius: 0px;}
        & > *:last-child { border-bottom-left-radius:0px;border-bottom-left-radius: 0px; }
        & > *:first-child { border-bottom-right-radius:0px;border-top-right-radius: 0px; }
      }
    & > * {
        margin: 0px; 
        letter-spacing: normal;
        vertical-align: middle;
        border-width: 0px 1px 0px 0px;
        // @include rounded(0);        
        &:last-child {border-width: 0px;}
        &:not(.btn){
            background-color: $field_bg;
            border-color: inherit;
        }
        &.btn {
            background: inherit; 
            line-height: inherit;
            border-right-color: rgba(255,255,255, .2);
        }
        &:not([class*="col-"]) { width: auto;}
    }
}
  //--------------------------

  .\.\.\. { border-style: dotted;}
  .-_- { border-style: dashed;}
  .__ { border-style: solid;}
  .__, .-_-, .\.\.\. {padding: 0.2em 0; border-width: 0 0 1px 0;
    // &[class*="icon-"]:not(:empty) {
    //     overflow: visible;
    //     margin-left: 1.8em;
    //     &:before {
    //         position: absolute;
    //         left: -.9em;
    //         top:50%;
    //     }
    // }
}

  ._raw {background: transparent; border-color: transparent; color: inherit}
  [class*="_txt_"] > * { color: inherit !important;}
  ._brdr, .__, .-_-, .\.\.\. {
    //   @include transition(border-radius ease-in-out .3s);
    // background: transparent;  
    background-color: transparent !important;
    // color: inherit;
    
  }

